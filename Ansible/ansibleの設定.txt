ansibleの設定

◆ansibleのバージョン
# ansible --version
ansible [core 2.14.2]
以下、省略
#

ansibleは/etc/ansibleディレクトリができてansible.cfgが作成されます。
設定項目によってはこのファイルを変更します。
なお、ansible.cfgを見たところコメント行しかありません。
ansible.cfgの設定については以下を見ろとのことです。
https://github.com/ansible/ansible/blob/stable-2.9/examples/ansible.cfg

◆パスワード認証を使用する
ansibleはデフォルトではSSH公開鍵認証を使用します。
でも、パスワード認証を使用したくなる時もあるかと思います。
その場合は、ansible.cfgに以下の行を設定します。

ask_pass      = True

◆playbookを一般ユーザー且つsudo権限で実行する
ansibleはデフォルトでは相手サーバーにrootユーザーでログインしてplaybookを実行します。
しかし、セキュリティ上、rootログインを拒否している場合もあるかと思います。
また、パッケージのインストールなどはroot権限が必要なためsudoも必要になります。
これらの設定方法は以下です。

1.ログイン元とログイン先に同じ一般ユーザーを作成します。（例えばansibleユーザー）

2.playbookに以下の行を追加する（ログイン先でsudoを実行するという意味です。追加する場所は1行目のhostsの下ぐらいです）
become: yes

3.ログイン先サーバーにsudo設定をする
visudoコマンドで以下の行を追記します。（場所は末尾でOKです）
ansible        ALL=(ALL)        NOPASSWD: ALL　　　　←★ユーザー名（ansible）は実際のユーザー名に合わせます

◆shellモジュールと専用モジュールについて
ansibleの一番簡単な使用方法は手動のときの手順をそのままshellモジュールでplaybookに記載することです。
この方法だとあまり違和感なく使用できます。
でも、ansibleには専用モジュールがあります。

どちらを使えば良いか？

例えばユーザー追加をする場合、shellモジュールだと1行です。nameの行を考慮しても2行です。
でもユーザー追加用の userモジュールを使用すると5行ぐらい記述する必要があります。しかも慣れていないと間違える可能性も高いです。
ではshellモジュールを使った方がいいか？
いえ、userモジュールを使用することをお勧めします。

例えばplaybookに誤りがあり途中でエラーになったと仮定します。
途中にユーザー追加の行が含まれていて正常に実行されたとします。
誤りを直して再度playbookを実行した場合、
shellモジュールでユーザー追加を記述していると既にユーザーが存在するとしてエラーになりplaybookがそこで止まります。解消するには作成したユーザーを削除する必要があります。
しかし、userモジュールを使用していると既にユーザーが存在していればエラーとならずにスキップしてそのまま次に進んでくれます。
そのため急いでいるときはshellモジュールでチャッチャッとやるのもいいですが、時間があるときは専用モジュールを使った方が良いです。
